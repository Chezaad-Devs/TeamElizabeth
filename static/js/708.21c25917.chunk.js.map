{"version":3,"file":"static/js/708.21c25917.chunk.js","mappings":"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","sources":["components/Navbar.js","components/Modal.js","components/Card.js","pages/View.jsx"],"sourcesContent":["import { useLocation, useNavigate, Link } from \"react-router-dom\";\r\nimport Logo from \"../img/Logo.webp\";\r\nimport \"../styles/header.css\";\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const toggleView = () => {\r\n    const nextPath =\r\n      location.pathname === \"/dashboard\" ? \"/teamelizabethmartinez\" : \"/dashboard\";\r\n    navigate(nextPath);\r\n  };\r\n\r\n  // const getGreeting = () => {\r\n  //   const currentTime = new Date().getHours();\r\n  //   let greeting = \"Hola\";\r\n\r\n  //   if (currentTime >= 5 && currentTime < 12) {\r\n  //     greeting = \"Buenos días\";\r\n  //   } else if (currentTime >= 12 && currentTime < 18) {\r\n  //     greeting = \"Buenas tardes\";\r\n  //   } else {\r\n  //     greeting = \"Buenas noches\";\r\n  //   }\r\n\r\n  //   return greeting;\r\n  // };\r\n\r\n  const getViewButtonText = () => {\r\n    return location.pathname === \"/dashboard\" ? \"Ver posts\" : \"Crear post\";\r\n  };\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <nav className=\"Container-Nav\">\r\n        <div className=\"Column1\">\r\n          <Link to=\"/teamelizabethmartinez\">\r\n            <img src={Logo} alt=\"Logo\" className=\"Img\" />\r\n          </Link>\r\n          {/* <h1>\r\n            <span className=\"Saludo\">{getGreeting()} </span> Gladialisa\r\n          </h1> */}\r\n        </div>\r\n        <div className=\"column2\">\r\n          <button onClick={toggleView} className=\"Btn\">\r\n            {getViewButtonText()}\r\n          </button>\r\n          <button onClick={handleLogout} className=\"Btn\">\r\n            Cerrar sesión\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"../styles/modal.css\";\r\n\r\nexport default function Modal({ children, onClose }) {\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          X\r\n        </button>\r\n        <div className=\"modal-content\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; // Importa Axios\r\nimport \"../styles/Post.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../components/Modal\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"../styles/content.css\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Card({ post }) {\r\n  const [image, setImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editedPostData, setEditedPostData] = useState({\r\n    // Inicializa los datos editados con los datos del post actual\r\n    title: post.title.rendered,\r\n    content: post.content.rendered,\r\n    categories: post.categories, // Agregar las categorías del post\r\n    featured_media: null,\r\n    status: \"publish\",\r\n  });\r\n  const [categories, setCategories] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      try {\r\n        if (\r\n          post?._links &&\r\n          post._links[\"wp:featuredmedia\"] &&\r\n          post._links[\"wp:featuredmedia\"][0]?.href\r\n        ) {\r\n          const response = await axios.get(\r\n            post._links[\"wp:featuredmedia\"][0].href\r\n          ); // Usa Axios para obtener la imagen\r\n          setImage(response.data.source_url);\r\n          console.log(response.data.source_url);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://teamelizabethmartinez.com/wp-json/wp/v2/categories\"\r\n        ); // Usa Axios para obtener las categorías\r\n        setCategories(response.data);\r\n        console.log(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching categories:\", error);\r\n        // Handle error\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const handleImageChange = (e) => {\r\n    const imageFile = e.target.files[0];\r\n    setEditedPostData({\r\n      ...editedPostData,\r\n      featured_media: imageFile,\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    console.log(id);\r\n\r\n    const confirmDelete = window.confirm(\r\n      \"¿Estás seguro de que deseas eliminar este post?\"\r\n    );\r\n    if (!confirmDelete) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.delete(\r\n        `https://teamelizabethmartinez.com/?rest_route=/wp/v2/posts/${id}&JWT=${token}`\r\n      );\r\n      window.location.href = \"dashboard\";\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setShowModal(true); // Abre el modal al hacer clic en el enlace de editar\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", editedPostData.title);\r\n      formData.append(\"content\", editedPostData.content);\r\n      formData.append(\"status\", editedPostData.status);\r\n      formData.append(\"categories\", editedPostData.categories);\r\n      if (editedPostData.featured_media) {\r\n        formData.append(\"featured_media\", editedPostData.featured_media);\r\n      }\r\n\r\n      await axios.put(\r\n        `https://teamelizabethmartinez.com/?rest_route=/wp/v2/posts/${post.id}&JWT=${token}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setShowModal(false);\r\n      navigate(\"/dashboard\");\r\n\r\n      // Si la actualización es exitosa, puedes hacer alguna acción adicional aquí, como recargar la lista de posts.\r\n    } catch (error) {\r\n      console.error(\"Falla en actualizar:\", error);\r\n      // Puedes manejar el error de alguna manera, como mostrando un mensaje al usuario.\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    if (e.target) {\r\n      const { name, value } = e.target;\r\n      setEditedPostData({\r\n        ...editedPostData,\r\n        [name]: value,\r\n      });\r\n    } else {\r\n      // Cuando el cambio proviene del editor ReactQuill\r\n      setEditedPostData({\r\n        ...editedPostData,\r\n        content: e, // 'e' es el contenido del editor ReactQuill\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-container\">\r\n        {image && (\r\n          <img className=\"image\" src={image} alt={post.title.rendered} />\r\n        )}\r\n        <h1 className=\"title\">{post.title.rendered}</h1>\r\n        <div className=\"card-body\">\r\n          <p className=\"date\">\r\n            Publicado {new Date(post.date).toLocaleDateString()}\r\n          </p>\r\n\r\n          <div className=\"container-button\">\r\n            <Link to=\"#\" className=\"Btn-link\" onClick={handleEdit}>\r\n              Editar\r\n            </Link>\r\n            <button onClick={() => handleDelete(post.id)} className=\"Btn-link\">\r\n              Eliminar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal para editar */}\r\n      {showModal && (\r\n        <Modal closeModal={() => setShowModal(false)}>\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <div className=\"mb-6\">\r\n              <label className=\"block mb-2\">Título:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={editedPostData.title}\r\n                onChange={(e) => handleInputChange(e)}\r\n                className=\"\"\r\n                style={{ width: \"100%\", fontSize: \"14px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"mb-8\">\r\n              <label className=\"block mb-2\">Contenido:</label>\r\n              <ReactQuill\r\n                value={editedPostData.content}\r\n                onChange={(content) => handleInputChange(content)} // Cambio aquí\r\n                className=\"\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <label className=\"block mb-2\">Imagen actual:</label>\r\n              {image && (\r\n                <img\r\n                  src={image}\r\n                  alt=\"Imagen actual\"\r\n                  style={{ maxWidth: \"100%\", marginBottom: \"10px\" }}\r\n                />\r\n              )}\r\n              <label className=\"block mb-2\">Imagen nueva:</label>\r\n              <input type=\"file\" onChange={handleImageChange} className=\"\" />\r\n              {editedPostData.featured_media && (\r\n                <img\r\n                  src={URL.createObjectURL(editedPostData.featured_media)}\r\n                  alt=\"Imagen nueva\"\r\n                  style={{ maxWidth: \"100%\", marginTop: \"10px\" }}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mb-6\">\r\n              <label className=\"block mb-2\">Categoría:</label>\r\n              <select\r\n                name=\"categories\"\r\n                value={editedPostData.categories || \"\"}\r\n                onChange={handleInputChange}\r\n                className=\"\"\r\n              >\r\n                {categories.map((category) => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <select\r\n                value={editedPostData.status || \"\"}\r\n                onChange={(e) => handleInputChange(e)}\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <option value=\"publish\">Publicado</option>\r\n                <option value=\"draft\">No publicado</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"Acciones\">\r\n              {\" \"}\r\n              <button type=\"submit\" className=\"Btn-Actualizar\">\r\n                Actualizar\r\n              </button>\r\n              <button\r\n                className=\"Btn-Cancelar\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card\";\r\nimport NavBar from \"../components/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/view.css\";\r\n\r\nfunction View() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  // const history = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://teamelizabethmartinez.com/?rest_route=/wp/v2/posts&JWT=${token}&per_page=15&orderby=date&order=desc`\r\n\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"No tienes autorización\");\r\n        }\r\n\r\n        const postData = await response.json();\r\n        setData(postData);\r\n        console.log(\"los datos esta aqui:\" , postData);\r\n      } catch (error) {\r\n        console.error(`Error fetching data: ${error.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [token]);\r\n\r\n  // const handleLogout = () => {\r\n  //   localStorage.clear();\r\n  //   history(\"/login\", { replace: true });\r\n  // };\r\n\r\n  const updatePost = async (updatedPost) => {\r\n    try {\r\n      // Lógica para actualizar el post en la API\r\n      // await axios.put(...)\r\n      // Después de actualizar el post en la API, actualizar localmente\r\n      const updatedPosts = data.map((post) =>\r\n        post.id === updatedPost.id ? updatedPost : post\r\n      );\r\n      setData(updatedPosts);\r\n    } catch (error) {\r\n      console.error(\"Error updating post:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <h1>Cargando los posts...</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <section className=\"wrap\">\r\n        {data.length > 0 ? (\r\n          data.map((item) => (\r\n            <Card key={item.id} post={item} updatePost={updatePost} />\r\n          ))\r\n        ) : (\r\n          <h1 className=\"mt-5 font-bold text-3xl\">No hay posts disponibles</h1>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default View;\r\n"],"names":["navigate","useNavigate","location","useLocation","_jsx","className","children","_jsxs","Link","to","src","Logo","alt","onClick","toggleView","nextPath","pathname","handleLogout","localStorage","removeItem","Modal","_ref","onClose","Card","post","image","setImage","useState","loading","setLoading","error","setError","showModal","setShowModal","editedPostData","setEditedPostData","title","rendered","content","categories","featured_media","status","setCategories","token","getItem","useEffect","async","_post$_links$wpFeatu","_links","href","response","axios","get","data","source_url","console","log","message","fetchImage","fetchCategories","handleInputChange","e","target","name","value","_Fragment","Date","date","toLocaleDateString","handleEdit","id","window","confirm","delete","concat","handleDelete","closeModal","onSubmit","preventDefault","formData","FormData","append","put","headers","Authorization","type","onChange","style","width","fontSize","ReactQuill","maxWidth","marginBottom","imageFile","files","URL","createObjectURL","marginTop","map","category","setData","fetch","ok","Error","postData","json","fetchData","updatePost","updatedPosts","updatedPost","NavBar","length","item"],"sourceRoot":""}