{"version":3,"file":"static/js/937.7cb5a500.chunk.js","mappings":"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","sources":["components/Navbar.js","components/ContactForm.js","pages/Admin.js"],"sourcesContent":["import { useLocation, useNavigate, Link } from \"react-router-dom\";\r\nimport Logo from \"../img/Logo.webp\";\r\nimport \"../styles/header.css\";\r\n\r\nfunction NavBar() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const toggleView = () => {\r\n    const nextPath =\r\n      location.pathname === \"/dashboard\" ? \"/teamelizabethmartinez\" : \"/dashboard\";\r\n    navigate(nextPath);\r\n  };\r\n\r\n  // const getGreeting = () => {\r\n  //   const currentTime = new Date().getHours();\r\n  //   let greeting = \"Hola\";\r\n\r\n  //   if (currentTime >= 5 && currentTime < 12) {\r\n  //     greeting = \"Buenos días\";\r\n  //   } else if (currentTime >= 12 && currentTime < 18) {\r\n  //     greeting = \"Buenas tardes\";\r\n  //   } else {\r\n  //     greeting = \"Buenas noches\";\r\n  //   }\r\n\r\n  //   return greeting;\r\n  // };\r\n\r\n  const getViewButtonText = () => {\r\n    return location.pathname === \"/dashboard\" ? \"Ver posts\" : \"Crear post\";\r\n  };\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <nav className=\"Container-Nav\">\r\n        <div className=\"Column1\">\r\n          <Link to=\"/teamelizabethmartinez\">\r\n            <img src={Logo} alt=\"Logo\" className=\"Img\" />\r\n          </Link>\r\n          {/* <h1>\r\n            <span className=\"Saludo\">{getGreeting()} </span> Gladialisa\r\n          </h1> */}\r\n        </div>\r\n        <div className=\"column2\">\r\n          <button onClick={toggleView} className=\"Btn\">\r\n            {getViewButtonText()}\r\n          </button>\r\n          <button onClick={handleLogout} className=\"Btn\">\r\n            Cerrar sesión\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"../styles/content.css\";\r\nimport \"react-quill/dist/quill.snow.css\"; // Estilo predeterminado del editor de texto\r\n\r\nfunction CreatePostForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [editorContent, setEditorContent] = useState(\"\");\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [status, setStatus] = useState(\"publish\"); // Estado predeterminado: publicado\r\n  const [featuredImage, setFeaturedImage] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    // Obtener las categorías disponibles desde WordPress\r\n    axios\r\n      .get(\"https://teamelizabethmartinez.com/wp-json/wp/v2/categories\")\r\n      .then((response) => {\r\n        setCategories(response.data);\r\n        setSelectedCategory(response.data[0]?.id); // Establecer la primera categoría como la seleccionada por defecto\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al obtener las categorías:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleImageChange = (e) => {\r\n    const imageFile = e.target.files[0];\r\n    setFeaturedImage(imageFile);\r\n    setImagePreview(URL.createObjectURL(imageFile));\r\n  };\r\n\r\n  const handleEditorChange = (content) => {\r\n    setEditorContent(content);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", featuredImage);\r\n\r\n    try {\r\n      // Subir la imagen destacada\r\n      const imageResponse = await axios.post(\r\n        `https://teamelizabethmartinez.com/?rest_route=/wp/v2/media`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${token}`, // Agrega el token de autorización si es necesario\r\n          },\r\n        }\r\n      );\r\n\r\n      // Crear la entrada con la URL de la imagen destacada\r\n      const postData = {\r\n        title,\r\n        content: editorContent,\r\n        categories: [selectedCategory],\r\n        status,\r\n        featured_media: imageResponse.data.id, // ID de la imagen subida\r\n      };\r\n\r\n      const postResponse = await axios.post(\r\n        `https://teamelizabethmartinez.com/?rest_route=/wp/v2/posts&JWT=${token}`,\r\n        postData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`, // Agrega el token de autorización si es necesario\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"Entrada creada:\", postResponse.data);\r\n\r\n      // Mostrar la alerta de éxito\r\n      setShowAlert(true);\r\n\r\n      // Limpiar el formulario después de mostrar la alerta\r\n      setTitle(\"\");\r\n      setEditorContent(\"\");\r\n      setSelectedCategory(\"\");\r\n      setStatus(\"publish\");\r\n      setFeaturedImage(null);\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error al crear la entrada:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Box-content\">\r\n      {/* Alerta de éxito */}\r\n      {showAlert && (\r\n        <div\r\n          className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4\"\r\n          role=\"alert\"\r\n        >\r\n          <p className=\"font-bold\">¡Entrada creada correctamente!</p>\r\n        </div>\r\n      )}\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2\">Título:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-8\">\r\n          <label className=\"block mb-2\">Contenido:</label>\r\n\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            value={editorContent}\r\n            onChange={handleEditorChange}\r\n            className=\"Content-Editor\"\r\n            // style={{ height: \"100px\" }}\r\n          />\r\n          {\"\"}\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2\">Categoría:</label>\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value)}\r\n            className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500\"\r\n          >\r\n            {categories.map((category) => (\r\n              <option key={category.id} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2\">Imagen destacada:</label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleImageChange}\r\n            className=\"border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500\"\r\n          />\r\n          {imagePreview && ( // Mostrar la previsualización si hay una imagen seleccionada\r\n            <img\r\n              src={imagePreview}\r\n              alt=\"Featured Image\"\r\n              className=\"mt-3 w-full rounded max-w-xs h-auto\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label className=\"block mb-2\">Estado:</label>\r\n          <select\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n            className=\"w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:border-blue-500\"\r\n          >\r\n            <option value=\"publish\">Publicado</option>\r\n            <option value=\"draft\">No publicado</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n        >\r\n          Crear entrada\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePostForm;\r\n","import NavBar from \"../components/Navbar\";\r\nimport ContactForm from \"../components/ContactForm\";\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <ContactForm />\r\n    </>\r\n  );\r\n}\r\n"],"names":["navigate","useNavigate","location","useLocation","_jsx","className","children","_jsxs","Link","to","src","Logo","alt","onClick","toggleView","nextPath","pathname","handleLogout","localStorage","removeItem","title","setTitle","useState","editorContent","setEditorContent","categories","setCategories","selectedCategory","setSelectedCategory","status","setStatus","featuredImage","setFeaturedImage","imagePreview","setImagePreview","showAlert","setShowAlert","token","getItem","useEffect","axios","get","then","response","_response$data$","data","id","catch","error","console","role","onSubmit","async","e","preventDefault","formData","FormData","append","imageResponse","post","headers","Authorization","concat","postData","content","featured_media","postResponse","log","type","value","onChange","target","ReactQuill","theme","map","category","name","imageFile","files","URL","createObjectURL","Admin","_Fragment","NavBar","ContactForm"],"sourceRoot":""}